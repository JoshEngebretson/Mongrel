//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id: MainGameInfo.vc 3803 2008-10-09 20:20:33Z dj_jl $
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MainGameInfo : LineSpecialGameInfo;

const int NUMTOTALBOTS		= 24;
const int NUMBOTTYPES		= 24;

const float TELEFOGHEIGHT	= 32.0;

int classFlags[3];

//==========================================================================
//
//	Init
//
//==========================================================================

void Init()
{
	::Init();
	SetSeqTrans('Platform', 0, SEQ_Platform);
	SetSeqTrans('Platform', 1, SEQ_Platform);	// a 'heavy' platform is just a platform
	SetSeqTrans('PlatformMetal', 2, SEQ_Platform);
	SetSeqTrans('Platform', 3, SEQ_Platform);	// same with a 'creak' platform
	SetSeqTrans('Silence', 4, SEQ_Platform);
	SetSeqTrans('Lava', 5, SEQ_Platform);
	SetSeqTrans('Water', 6, SEQ_Platform);
	SetSeqTrans('Ice', 7, SEQ_Platform);
	SetSeqTrans('Earth', 8, SEQ_Platform);
	SetSeqTrans('PlatformMetal2', 9, SEQ_Platform);

	SetSeqTrans('DoorNormal', 0, SEQ_Door);
	SetSeqTrans('DoorHeavy', 1, SEQ_Door);
	SetSeqTrans('DoorMetal', 2, SEQ_Door);
	SetSeqTrans('DoorCreak', 3, SEQ_Door);
	SetSeqTrans('Silence', 4, SEQ_Door);
	SetSeqTrans('Lava', 5, SEQ_Door);
	SetSeqTrans('Water', 6, SEQ_Door);
	SetSeqTrans('Ice', 7, SEQ_Door);
	SetSeqTrans('Earth', 8, SEQ_Door);
	SetSeqTrans('DoorMetal2', 9, SEQ_Door);

	SetSeqTrans('Wind', 0, SEQ_Environment);

}

//==========================================================================
//
//  InitNewGame
//
//==========================================================================

void InitNewGame(int skill)
{
	SetSkill(skill);
	nomonsters = GetCvar('NoMonsters');
	bRandomClass = GetCvar('RandomClass');
	bRespawnItems = !!GetCvar('deathmatch');
	bWeaponsStay = netgame && !GetCvar('deathmatch');
}


defaultproperties
{
	LevelInfoClass = HexenLevelInfo;
	GameFilterFlag = EntityEx::GAME_Hexen;
	bDefaultBloodSplatter = true;
	bUseHexenPolyobjTypes = true;
	bNoDamageThrustInvulnerable = true;
	bNightmareFastChase = true;
	bRavenStylePickupRespawn = true;
	TeleFogHeight = TELEFOGHEIGHT;
	TeleportFogState = 'Raven';
	DefaultKickBack = 150.0;
	NonMonsterAngleIncrements = 1;

	classFlags[0] = HexenLevelInfo::MTF2_FIGHTER;
	classFlags[1] = HexenLevelInfo::MTF2_CLERIC;
	classFlags[2] = HexenLevelInfo::MTF2_MAGE;	

	PlayerClasses.Num = 1;
	PlayerClasses[0] = FighterPlayer;
}
